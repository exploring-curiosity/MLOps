#---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: prometheus
#  namespace: gourmetgram-platform
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: prometheus
#  template:
#    metadata:
#      labels:
#        app: prometheus
#    spec:
#      containers:
#        - name: prometheus
#          image: prom/prometheus:latest
#          ports:
#            - containerPort: 9090
#
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: prometheus
#  namespace: gourmetgram-platform
#spec:
#  selector:
#    app: prometheus
#  ports:
#    - port: 9090
#      targetPort: 9090
#  externalIPs:
#    - {{ .Values.prometheus.externalIP }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: gourmetgram-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/
            - name: prometheus-data
              mountPath: /data
#          # livenessProbe and readinessProbe are added for better management in Kubernetes
#          livenessProbe:
#            httpGet:
#              path: /-/ready
#              port: 9090
#            initialDelaySeconds: 5
#            periodSeconds: 10
#          readinessProbe:
#            httpGet:
#              path: /-/healthy
#              port: 9090
#            initialDelaySeconds: 5
#            periodSeconds: 10
          resources: #Add resource requests and limits
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 1
              memory: 2Gi
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config # This should match the ConfigMap name
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: prometheus-data # This should match the PVC name

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: gourmetgram-platform
spec:
  selector:
    app: prometheus
  ports:
    - port: 9090
      targetPort: 9090
#  type: NodePort #Changed to NodePort.  Use Ingress in production.
  externalIPs: #Removed externalIPs, use Ingress
    - {{ .Values.prometheus.externalIP }}

---
# ConfigMap for Prometheus configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: gourmetgram-platform
data:
  prometheus.yml: |
    global:
      scrape_interval:     15s
      evaluation_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'food11'
        static_configs:
          - targets: ['fastapi_server:8000']
      # Example job to scrape node-exporter
      - job_name: 'node'
        static_configs:
          - targets: ['node-exporter:9100'] # Change node-exporter to your node exporter service name

---
# Persistent Volume Claim for Prometheus data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-data
  namespace: gourmetgram-platform
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi # Adjust the storage size as needed
  storageClassName: standard # Or your preferred storage class

