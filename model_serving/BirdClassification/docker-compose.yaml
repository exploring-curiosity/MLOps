version: "3.8"
name: fastapi_test

services:

  fastapi_server:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    container_name: fastapi_server
    runtime: nvidia
    depends_on:
      - triton_server
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    volumes:
      - ./fastapi:/app
    ports:
      - "8080:8000"  # FastAPI exposed to host
    environment:
      - TRITON_SERVER_URL=http://triton_server:8000
    command: >
      uvicorn app:app --host 0.0.0.0 --port 8000 --workers 9

  triton_server:
    image: nvcr.io/nvidia/tritonserver:25.04-py3
    container_name: triton_server
    runtime: nvidia
    ports:
      - "8081:8000"  # Triton HTTP
      - "8001:8001"  # gRPC
      - "8002:8002"  # Prometheus metrics
    volumes:
      - ./models:/models
    command: >
      tritonserver
        --model-repository=/models
        --model-control-mode=poll
        --disable-auto-complete-config
        --log-verbose=1

  jupyter:
    container_name: jupyter
    image: quay.io/jupyter/minimal-notebook:latest
    ports:
      - "8888:8888"
    volumes:
      - ./:/home/jovyan/work
    command: start-notebook.sh --NotebookApp.token=''
    working_dir: /home/jovyan/work

  flask:
    build:
      context: ./flask
      dockerfile: Dockerfile
    container_name: flask
    ports:
      - "5000:5000"
    environment:
      - FASTAPI_SERVER_URL=http://fastapi_server:8000
    volumes:
      - ./flask:/app
      - ./flask/templates:/app/templates
    depends_on:
      - fastapi_server

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - fastapi_server
      - triton_server

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8083:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
