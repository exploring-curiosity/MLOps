version: '3.8'

services:
  minio:
    image: minio/minio
    container_name: minio
    restart: always
    ports:
      - "9000:9000"   # object API
      - "9001:9001"   # console UI
    environment:
      MINIO_ROOT_USER: "your-access-key"
      MINIO_ROOT_PASSWORD: "your-secret-key"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD-SHELL","timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1"]
      interval: 1s
      timeout: 10s
      retries: 5

  mlflow-create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
        mc alias set minio http://minio:9000 your-access-key your-secret-key && \
        mc mb minio/mlflow-artifacts || echo 'mlflow-artifacts already exists'
      "

  ray-create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
        mc alias set minio http://minio:9000 your-access-key your-secret-key && \
        mc mb minio/ray || echo 'ray bucket already exists'
      "

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mlflowdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.20.2
    container_name: mlflow
    restart: always
    depends_on:
      - minio
      - postgres
      - mlflow-create-bucket
    environment:
      MLFLOW_TRACKING_URI: http://0.0.0.0:8000
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: "your-access-key"
      AWS_SECRET_ACCESS_KEY: "your-secret-key"
    ports:
      - "8000:8000"
    command: >
      /bin/sh -c "pip install psycopg2-binary boto3 && \
      mlflow server \
        --backend-store-uri postgresql://user:password@postgres/mlflowdb \
        --artifacts-destination s3://mlflow-artifacts/ \
        --serve-artifacts --host 0.0.0.0 --port 8000
      "
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - minio
      - ray-create-bucket
    ports:
      - "3000:3000"
    environment:
      GF_INSTALL_PLUGINS: grafana-piechart-panel
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_SECURITY_ALLOW_EMBEDDING: "true"
    volumes:
      - grafana_data:/var/lib/grafana
      
volumes:
  minio_data_mlflow:
  postgres_data:
  minio_data_ray:
  grafana_data:
