version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.fast_api
    container_name: fastapi-server
    working_dir: /app
    volumes:
      - ../TrainingScripts:/app
      - features_data:/app/Features
    ports:
      - "9090:9090"
    command: >
      python main.py --host 0.0.0.0 --port 9090

  ray-head:
    image: rayproject/ray:2.42.1
    container_name: ray-head
    command: >
      /bin/sh -c "
        mkdir -p /tmp/ray && \
        chown -R root:root /tmp/ray && \
        ray metrics launch-prometheus && \
        ray start --head --port=6379 --dashboard-host=0.0.0.0 --block --metrics-export-port=8080
      "
    ports:
      - "6379:6379"
      - "8265:8265"
      - "8080:8080"
      - "8090:8090"
    shm_size: '24g'
    volumes:
      - ray_tmp:/tmp/ray
    environment:
      - AWS_ACCESS_KEY_ID=your-access-key
      - AWS_SECRET_ACCESS_KEY=your-secret-key
      - AWS_ENDPOINT_URL=http://minio:9000
    user: root

  ray-worker-0:
    image: rayproject/ray:2.42.1-gpu
    container_name: ray-worker-0
    command: ["ray", "start", "--address=ray-head:6379", "--num-cpus=32", "--num-gpus=1", "--block"]
    deploy:
      resources:
        reservations:
          devices:
            - driver: "nvidia"
              capabilities: ["gpu"]
              device_ids: ["0"]
    shm_size: '24g'
    environment:
      - AWS_ACCESS_KEY_ID=your-access-key
      - AWS_SECRET_ACCESS_KEY=your-secret-key
      - AWS_ENDPOINT_URL=http://minio:9000
    volumes:
      - features_data:/mnt
    depends_on:
      - ray-head

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    entrypoint: |
      /bin/sh -c "
      # Wait for config directory
      while [ ! -f /tmp/ray/session_latest/metrics/grafana/grafana.ini ]; do
        echo 'Waiting for Grafana config files...'
        sleep 2
      done
      
      # Start Grafana with copied config
      /run.sh --config /tmp/ray/session_latest/metrics/grafana/grafana.ini"
    ports:
      - "3000:3000"
    volumes:
      - grafana_storage:/var/lib/grafana
      - ray_tmp:/tmp/ray:ro
    environment:
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_PATHS_PROVISIONING=/tmp/ray/session_latest/metrics/grafana/provisioning
      - GF_SERVER_HTTP_ADDR=0.0.0.0
      - GF_DATABASE_TYPE=sqlite3
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_PROXY_ENABLED=true
      - GF_AUTH_PROXY_AUTO_SIGN_UP=true
    depends_on:
      - ray-head

volumes:
  features_data:
  grafana_storage:
  ray_tmp:
